import argparse
from .models import Note
from .storage import NoteStorage

class NoteCommands:
    # –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ó–¥–µ—Å—å —è —Ä–µ–∞–ª–∏–∑—É—é –≤—Å—é –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
    
    def __init__(self, storage: NoteStorage):
        # –°–æ—Ö—Ä–∞–Ω—è—é –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
        self.storage = storage
    
    def add_note(self, title: str, content: str):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
        –ü–æ–ª—É—á–∞—é –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç, —Å–æ–∑–¥–∞—é –∑–∞–º–µ—Ç–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω—è—é –≤ —Ñ–∞–π–ª
        """
        # –ü—Ä–æ–≤–µ—Ä—è—é —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç
        if not title or not content:
            raise ValueError("–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
        
        # –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–º–µ—Ç–∫–∏
        note = Note(title=title, content=content)
        
        # –°–æ—Ö—Ä–∞–Ω—è—é –∑–∞–º–µ—Ç–∫—É –≤ —Ñ–∞–π–ª –∏ –ø–æ–ª—É—á–∞—é —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å ID
        saved_note = self.storage.save_note(note)
        
        # –°–æ–æ–±—â–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—Ö–µ
        print(f"‚úÖ –ó–∞–º–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! (ID: {saved_note.id})")
    
    def list_notes(self):
        # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
        # –ü–æ–ª—É—á–∞—é –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –∏ –∫—Ä–∞—Å–∏–≤–æ –∏—Ö –≤—ã–≤–æ–∂—É
        # –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
        notes = self.storage.get_all_notes()
        
        # –ü—Ä–æ–≤–µ—Ä—è—é –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∑–∞–º–µ—Ç–∫–∏
        if not notes:
            print("üìù –ó–∞–º–µ—Ç–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é!")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞—é —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –∑–∞–º–µ—Ç–æ–∫
        print(f"üìã –Ø –Ω–∞—à—ë–ª {len(notes)} –∑–∞–º–µ—Ç–æ–∫:")
        
        # –ü–µ—Ä–µ–±–∏—Ä–∞—é –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ –∏ –≤—ã–≤–æ–∂—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π
        for note in notes:
            print(f"ID: {note.id}")
            print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {note.title}")
            print(f"–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {note.content}")
            print(f"–°–æ–∑–¥–∞–Ω–∞: {note.created_at[:16]}")  # –û–±—Ä–µ–∑–∞—é –¥–∞—Ç—É –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
            print("-" * 30)
    
    def search_notes(self, query: str):
        # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
        # –ò—â—É –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ –∑–∞–º–µ—Ç–æ–∫
        # –ü—Ä–æ–≤–µ—Ä—è—é —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        if not query:
            print("üîç –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞!")
            return
        
        # –ò—â—É –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
        notes = self.storage.search_notes(query)
        
        # –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞—à—ë–ª –ª–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å
        if not notes:
            print(f"üòû –ü–æ –∑–∞–ø—Ä–æ—Å—É '{query}' —è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª (")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
        print(f"üéØ –Ø –Ω–∞—à—ë–ª {len(notes)} –∑–∞–º–µ—Ç–æ–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}':")
        for note in notes:
            print(f"ID: {note.id} - {note.title}")
            print(f"   {note.content[:60]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞—é —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞
    
    def delete_note(self, note_id: int):
        # –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ –ø–æ ID
        # –ü–æ–ª—É—á–∞—é ID –∑–∞–º–µ—Ç–∫–∏ –∏ —É–¥–∞–ª—è—é –µ—ë –∏–∑ —Ñ–∞–π–ª–∞
        # –ü—ã—Ç–∞—é—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
        if self.storage.delete_note(note_id):
            print(f"üóëÔ∏è –ó–∞–º–µ—Ç–∫–∞ ID {note_id} —É–¥–∞–ª–µ–Ω–∞")
        else:
            print(f"‚ö†Ô∏è –ó–∞–º–µ—Ç–∫–∞ —Å ID {note_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def setup_parser():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    # –ó–¥–µ—Å—å —è –æ–ø—Ä–µ–¥–µ–ª—è—é –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–Ω–∏–º–∞–µ—Ç –º–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
    # –°–æ–∑–¥–∞—é –ø–∞—Ä—Å–µ—Ä —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã
    parser = argparse.ArgumentParser(description='üìù –ú–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–º–µ—Ç–æ–∫')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    parser.add_argument('--add', action='store_true', 
                       help='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
    parser.add_argument('--list', action='store_true', 
                       help='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫
    parser.add_argument('--search', type=str, 
                       help='–ù–∞–π—Ç–∏ –∑–∞–º–µ—Ç–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç—É')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    parser.add_argument('--delete', type=int, 
                       help='–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –ø–æ ID')
    
    # –î–æ–±–∞–≤–ª—è—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    parser.add_argument('--title', type=str, 
                       help='–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏')
    parser.add_argument('--content', type=str, 
                       help='–¢–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏')
    
    return parser
