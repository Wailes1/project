# –≠—Ç–æ –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã - –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–º–µ—Ç–æ–∫
# –ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–ø—É—Å–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

import sys
import os
import argparse  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é argparse –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

# –î–æ–±–∞–≤–ª—è—é —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π, —á—Ç–æ–±—ã Python –Ω–∞—à—ë–ª –º–æ–∏ —Ñ–∞–π–ª—ã
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É—é —Å–≤–æ–∏ –∫–ª–∞—Å—Å—ã –∏–∑ –ø–∞–∫–µ—Ç–∞ notebook
from notebook.commands import NoteCommands
from notebook.storage import NoteStorage

def setup_parser():
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    # –ó–¥–µ—Å—å —è –æ–ø—Ä–µ–¥–µ–ª—è—é –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–Ω–∏–º–∞–µ—Ç –º–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
    parser = argparse.ArgumentParser(
        description='üìù –ú–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–º–µ—Ç–æ–∫ - –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π'
    )
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    parser.add_argument('--add', action='store_true', 
                       help='–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
    parser.add_argument('--list', action='store_true', 
                       help='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫
    parser.add_argument('--search', type=str, 
                       help='–ù–∞–π—Ç–∏ –∑–∞–º–µ—Ç–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç—É')
    
    # –î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    parser.add_argument('--delete', type=int, 
                       help='–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –ø–æ ID')
    
    # –î–æ–±–∞–≤–ª—è—é –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
    parser.add_argument('--date', type=str, 
                       help='–§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ (today, week, month, –ì–ì–ì–ì-–ú–ú-–î–î, –ì–ì–ì–ì-–ú–ú, –ì–ì–ì–ì)')
    
    # –î–æ–±–∞–≤–ª—è—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
    parser.add_argument('--title', type=str, 
                       help='–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏')
    
    parser.add_argument('--content', type=str, 
                       help='–¢–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏')
    
    return parser

def main():
    # –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
    # –ó–¥–µ—Å—å —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    # –ò—Å–ø–æ–ª—å–∑—É—é argparse –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    
    # –°–æ–∑–¥–∞—é –ø–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    parser = setup_parser()
    
    # –†–∞–∑–±–∏—Ä–∞—é –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    args = parser.parse_args()
    
    try:
        # –°–æ–∑–¥–∞—é –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–º –∑–∞–º–µ—Ç–æ–∫
        storage = NoteStorage()
        
        # –°–æ–∑–¥–∞—é –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
        commands = NoteCommands(storage)
        
        # –ü—Ä–æ–≤–µ—Ä—è—é –∫–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –≤—ã–ø–æ–ª–Ω—è—é –µ—ë
        if args.add:
            # –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
            if not args.title or not args.content:
                print("–û—à–∏–±–∫–∞: –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å --title –∏ --content")
                return
            
            # –í—ã–∑—ã–≤–∞—é –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
            commands.add_note(args.title, args.content)
        
        elif args.list:
            # –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
            commands.list_notes(args.date)
        
        elif args.search:
            # –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫
            commands.search_notes(args.search, args.date)
        
        elif args.delete:
            # –ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
            commands.delete_note(args.delete)
        
        else:
            # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞—é —Å–ø—Ä–∞–≤–∫—É
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
            parser.print_help()
    
    except Exception as e:
        # –õ–æ–≤–ª—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ "—É–ø–∞–ª–∞"
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    main()
